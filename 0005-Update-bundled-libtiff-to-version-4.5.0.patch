From 676bc5ca7c6baeca218f606631ce8fdb40323f05 Mon Sep 17 00:00:00 2001
From: Andreas Sturmlechner <asturm@gentoo.org>
Date: Tue, 19 Sep 2023 12:57:34 +0200
Subject: [PATCH 5/7] Update bundled libtiff to version 4.5.0

[ChangeLog][Third-Party Code] Bundled libtiff was updated to version 4.5.0

Fixes: QTBUG-109972
Pick-to: 6.5 6.4 6.2 5.15
Change-Id: I2121b68c5a09ca322b3af0f971d710ae392c539c
Reviewed-by: Qt CI Bot <qt_ci_bot@qt-project.org>
Reviewed-by: Allan Sandfeld Jensen <allan.jensen@qt.io>
(cherry picked from commit da0158c0d36973e56fc7c364383bb5ebba4bb3e7)

* asturmlechner 2023-09-19: Resolve conflict with 5.15 branch commit
  95da4f8f81271e0d76acfffdff563259d5765e43 ("Patch bundled libtiff to
  compile on Integrity")
---
 src/3rdparty/libtiff/libtiff/tif_fax3.c | 28 ++++++++++++-------------
 1 file changed, 14 insertions(+), 14 deletions(-)

diff --git a/src/3rdparty/libtiff/libtiff/tif_fax3.c b/src/3rdparty/libtiff/libtiff/tif_fax3.c
index 7428544..26fcc9b 100644
--- a/src/3rdparty/libtiff/libtiff/tif_fax3.c
+++ b/src/3rdparty/libtiff/libtiff/tif_fax3.c
@@ -349,22 +349,22 @@ static int Fax3Decode2D(TIFF *tif, uint8_t *buf, tmsize_t occ, uint16_t s)
 }
 #undef SWAP
 
-# define FILL(n, cp) {                            \
-    int32_t ifill;                                \
-    for (ifill = 0; ifill < (n); ++ifill)         \
-    {                                             \
-        (cp)[ifill] = 0xff;                       \
-    }                                             \
-    (cp) += (n);                                  \
+#define FILL(n, cp) {                                                          \
+    int32_t ifill;                                                             \
+    for (ifill = 0; ifill < (n); ++ifill)                                      \
+    {                                                                          \
+        (cp)[ifill] = 0xff;                                                    \
+    }                                                                          \
+    (cp) += (n);                                                               \
 }
 
-# define ZERO(n, cp) {                            \
-    int32_t izero;                                \
-    for (izero = 0; izero < (n); ++izero)         \
-    {                                             \
-        (cp)[izero] = 0;                          \
-    }                                             \
-    (cp) += (n);                                  \
+#define ZERO(n, cp) {                                                          \
+    int32_t izero;                                                             \
+    for (izero = 0; izero < (n); ++izero)                                      \
+    {                                                                          \
+        (cp)[izero] = 0;                                                       \
+    }                                                                          \
+    (cp) += (n);                                                               \
 }
 
 /*
-- 
2.45.1

